{"ast":null,"code":"var _jsxFileName = \"/Users/leventarica/slack-clone-docker/src/component/SideBarOption.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport '../SidebarOption.css';\nimport { useHistory } from 'react-router-dom';\nimport Axios from 'axios'; //add database connection,\n// when the url needs to be changed programatically \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SideBarOption({\n  Icon,\n  title,\n  id,\n  setNewChannel,\n  addChannelOption\n}) {\n  _s();\n\n  const history = useHistory();\n\n  const selectChannel = () => {\n    // if id came from database or datastore\n    // when click on channel will force a redirect with the useHistory hook \n    // when you go back a page or forward a page the history is being modified\n    // when the component loads we have the roomID so we can load the data we need.\n    if (id) {\n      history.push(`/room/${id}`); // so this would  redirect us to the room we selected\n      // very nice! \n    } else {\n      history.push(`/room/${title}`);\n    }\n  };\n\n  const updateDatabase = channelName => {\n    // const url = \"http://localhost:9000/v1/channels/add\"\n    const url = \"http://localhost:9000/v1/channels/add\";\n    Axios.post(url, {\n      id: Math.floor(Math.random() * 100000000),\n      name: channelName\n    }).then(res => {\n      console.log(res.data);\n      console.log(`${channelName} has been added!!!!!!`);\n      setNewChannel(res.data);\n    });\n  };\n\n  const addChannel = () => {\n    const channelName = prompt('Please enter the channel name');\n\n    if (channelName) {\n      updateDatabase(channelName);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebarOption\",\n    onClick: addChannelOption ? addChannel : selectChannel,\n    children: [Icon && /*#__PURE__*/_jsxDEV(Icon, {\n      className: \"sidebarOption__icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 22\n    }, this), Icon ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"sidebarOption__channel\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sidebarOption__hash\",\n        children: \"#\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SideBarOption, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = SideBarOption;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideBarOption\");","map":{"version":3,"sources":["/Users/leventarica/slack-clone-docker/src/component/SideBarOption.js"],"names":["React","useState","useEffect","useHistory","Axios","SideBarOption","Icon","title","id","setNewChannel","addChannelOption","history","selectChannel","push","updateDatabase","channelName","url","post","Math","floor","random","name","then","res","console","log","data","addChannel","prompt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAO,sBAAP;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AAEA;;;AAEA,eAAe,SAASC,aAAT,CAAuB;AAACC,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcC,EAAAA,EAAd;AAAkBC,EAAAA,aAAlB;AAAiCC,EAAAA;AAAjC,CAAvB,EAA6E;AAAA;;AACxF,QAAMC,OAAO,GAAGR,UAAU,EAA1B;;AAGA,QAAMS,aAAa,GAAG,MAAM;AACxB;AACA;AACA;AACA;AACA,QAAKJ,EAAL,EAAS;AACLG,MAAAA,OAAO,CAACE,IAAR,CAAc,SAAQL,EAAG,EAAzB,EADK,CAEL;AACA;AACH,KAJD,MAIO;AACHG,MAAAA,OAAO,CAACE,IAAR,CAAc,SAAQN,KAAM,EAA5B;AACH;AACJ,GAZD;;AAcA,QAAMO,cAAc,GAAIC,WAAD,IAAiB;AACpC;AACA,UAAMC,GAAG,GAAG,uCAAZ;AACAZ,IAAAA,KAAK,CAACa,IAAN,CAAWD,GAAX,EAAgB;AACZR,MAAAA,EAAE,EAAEU,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,SAA3B,CADQ;AAEZC,MAAAA,IAAI,EAAEN;AAFM,KAAhB,EAGGO,IAHH,CAGQC,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAa,GAAEV,WAAY,uBAA3B;AACAN,MAAAA,aAAa,CAACc,GAAG,CAACG,IAAL,CAAb;AACD,KAPH;AAWH,GAdD;;AAgBA,QAAMC,UAAU,GAAG,MAAM;AACrB,UAAMZ,WAAW,GAAGa,MAAM,CAAC,+BAAD,CAA1B;;AAEA,QAAIb,WAAJ,EAAiB;AAEbD,MAAAA,cAAc,CAACC,WAAD,CAAd;AAEH;AAEJ,GATD;;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AACA,IAAA,OAAO,EAAEL,gBAAgB,GAAGiB,UAAH,GAAef,aADxC;AAAA,eAGKN,IAAI,iBAAI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,YAHb,EAIKA,IAAI,gBAAI;AAAA,gBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,YAAJ,gBACD;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA,8BACI;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKA,KAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YALR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAzDuBF,a;UACJF,U;;;KADIE,a","sourcesContent":["import React,  {useState, useEffect} from 'react'\nimport '../SidebarOption.css'\nimport { useHistory } from 'react-router-dom'\nimport Axios from 'axios'\n//add database connection,\n\n// when the url needs to be changed programatically \n\nexport default function SideBarOption({Icon, title, id, setNewChannel, addChannelOption, }) {\n    const history = useHistory();\n   \n\n    const selectChannel = () => {\n        // if id came from database or datastore\n        // when click on channel will force a redirect with the useHistory hook \n        // when you go back a page or forward a page the history is being modified\n        // when the component loads we have the roomID so we can load the data we need.\n        if  (id) {\n            history.push(`/room/${id}`);\n            // so this would  redirect us to the room we selected\n            // very nice! \n        } else {\n            history.push(`/room/${title}`)\n        }\n    } \n\n    const updateDatabase = (channelName) => {\n        // const url = \"http://localhost:9000/v1/channels/add\"\n        const url = \"http://localhost:9000/v1/channels/add\"\n        Axios.post(url, {\n            id: Math.floor(Math.random() * 100000000),\n            name: channelName\n        }).then(res => {\n            console.log(res.data)\n            console.log(`${channelName} has been added!!!!!!`)\n            setNewChannel(res.data)\n          })     \n\n         \n\n    }\n\n    const addChannel = () => {\n        const channelName = prompt('Please enter the channel name')\n        \n        if (channelName) {\n\n            updateDatabase(channelName)\n          \n        }\n\n    }\n    return (\n        <div className=\"sidebarOption\"\n        onClick={addChannelOption ? addChannel: selectChannel}\n        >\n            {Icon && <Icon className=\"sidebarOption__icon\"/>}\n            {Icon ? (<h3>{title}</h3>) : (\n                <h3 className=\"sidebarOption__channel\">\n                    <span className=\"sidebarOption__hash\">#</span>\n                    {title}\n                </h3>\n             )}            \n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}