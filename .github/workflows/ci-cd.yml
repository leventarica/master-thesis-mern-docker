name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.20.2'

      - name: Install dependencies
        run: npm install

      - name: Build Docker images
        run: |
          docker build -t kueltuer2018/slack:frontend -f ./Dockerfile.reactUI .
          docker build -t kueltuer2018/slack:backend -f ./server/Dockerfile.node ./server
          docker build -t kueltuer2018/slack:db -f ./MongoDB/Dockerfile.mongoDB ./MongoDB

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Push Docker images
        run: |
          docker push kueltuer2018/slack:frontend
          docker push kueltuer2018/slack:backend
          docker push kueltuer2018/slack:db

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to AWS EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_SSH_USER }}
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem $USER@$HOST <<EOF
          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}
          docker pull kueltuer2018/frontend
          docker pull kueltuer2018/backend
          docker pull kueltuer2018/db
          docker-compose -f ./docker-compose.yml up -d
          echo "Deployment complete"